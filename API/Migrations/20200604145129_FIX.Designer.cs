// <auto-generated />
using System;
using API.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200604145129_FIX")]
    partial class FIX
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113");

            modelBuilder.Entity("API.Models.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Text")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Quotes");

                    b.HasData(
                        new { Id = 1, Author = "Native", Date = new DateTime(2020, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), Text = "Шел Грек через реку" },
                        new { Id = 2, Author = "Джек Воробей", Date = new DateTime(1890, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), Text = "Бери всё и ничего не отдавай" },
                        new { Id = 3, Author = "Достоевский", Date = new DateTime(1890, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), Text = "Надо любить жизнь больше, чем смысл жизни." },
                        new { Id = 4, Author = "Шерлок Холмс", Date = new DateTime(1800, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), Text = "Элементарно, Ватсон" },
                        new { Id = 5, Author = "Сократ", Date = new DateTime(1100, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Text = "Неосмысленная жизнь не стоит того, чтобы жить." }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
